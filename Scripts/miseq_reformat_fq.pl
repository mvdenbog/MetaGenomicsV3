#!/usr/bin/perl -w


=pod

=head1 NAME
 miseq_reformat.pl

=head1 SYNOPSIS

Reformats an input file generated by a MiSeq/HiSeq system, where reads are formatted in a scheme that includes a space-character, which might not correctly be used (i.e. read information from R1 and/or R2) in downstream operations.

=head1 DESCRIPTION

Examples of newly Illumina formatted files:

## @M01626:14:000000000-A3DTG:1:1101:14765:1321 1:N:0:2

## @HISEQ:295:C1J1NACXX:7:1101:1320:2183 1:N:0:GCCAAT

This script reformats those lines to:

## @M01626:14:000000000-A3DTG:1:1101:14765:1321:N:0:2\1

## @HISEQ:295:C1J1NACXX:7:1101:1320:2183:N:0:GCCAAT\1

 
=head1 BUGS/CAVEATS


=head1 AUTHOR

M.Vandenbogaert

Pole Genotypage des Pathogenes,
Cellule d'Intervention Biologique d'Urgence (CIBU),
CCOMS  de Reference et de Recherche pour les Arbovirus et les Fievres hemorragiques virales,
Unite de Recherche et d'Expertise 'Environnement et Risques Infectieux' (ERI).

Institut Pasteur,
25-28 rue du docteur Roux,
75015 Paris.


=head1 SEE ALSO

=head1 COPYRIGHT and LICENSE

=cut


use strict;

open (F, $ARGV[0]) or die;


if (scalar(@ARGV)<=1){print "no output file defined\n... exiting.\n"; exit(1);}

open (FOUT, ">$ARGV[1]") or die;
my @s = ();
my $read = -1;
my $line = "";
my $nb = 0;

$line = <F>;
my $identifier = "";
if ($line =~ m/\@/){
$identifier = (split /:/, $line)[0];
}
print STDERR "identifier is $identifier \n";
close(F);
open (F, $ARGV[0]) or die;

while (<F>){
    chomp;
    if (m/^$identifier/ ){
	$nb++;
	$line = $_;
	@s = split / /, $line;
	if (scalar(@s)>1){ 
	$read = (split /:/, $s[1])[0];

	$line =~ s/ [12]//;
	$line .= ":$read";

	if ($line =~ m/ /){
	    print STDERR "WARNING, line still contains spaces ... \n";
	}
}
	print FOUT $line . "\n";


    }
    else{
	print FOUT $_ . "\n";
    }
}

close (F);
close(FOUT);
print STDOUT "ReFormatted $nb sequences\n";

